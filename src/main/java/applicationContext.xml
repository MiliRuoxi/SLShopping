<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"    
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/context    
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
   <!-- 扫描dao，service层 -->
   <context:component-scan base-package="com.jbit.dao,com.jbit.service"></context:component-scan>
   
   <!-- 引用数据源文件 -->
   <context:property-placeholder location="classpath:jdbc.properties" system-properties-mode="NEVER"/><!-- 系统属性模式 -->
     
     <!-- 配置数据源DataSource -->
    <bean id="dataSourceLocal" name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
        <!-- 指定连接数据库的驱动-->  
        <property name="driverClass" value="${jdbc.driverClassName}"/>  
        <!-- 指定连接数据库的URL-->  
        <property name="jdbcUrl" value="${jdbc.url}"/>  
        <!-- 指定连接数据库的用户名-->  
        <property name="user" value="${jdbc.username}"/>  
        <!-- 指定连接数据库的密码-->  
        <property name="password" value="${jdbc.password}"/>  
        <!-- 指定连接池中保留的最大连接数. Default:15-->  
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>  
        <!-- 指定连接池中保留的最小连接数-->  
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>  
        <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->  
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>  
        <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->  
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>  
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->  
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>  
        <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。  
        但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->  
        <property name="maxStatements" value="${jdbc.maxStatements}"/>  
        <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->  
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>  
    </bean>  
     <!-- 定义事务管理TransactionManager -->
     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"></property>
     </bean>
     <!-- 配置SqlSessionFactoryBean -->
     <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
            
            <!-- 引用数据源文件 -->
            <property name="dataSource" ref="dataSource"></property>
            
            <!-- 引用Mybatis配置文件中的配置 -->
            <property name="configLocation" value="classpath:mybatis-config.xml"></property>           
     </bean>
     
     
     
     <!-- 通过<tx:advice>标签为指定的事务管理器设置事物属性 -->
         <!-- 定义属性，声明事物规则 -->
        <tx:advice id="txadvice" transaction-manager="transactionManager">
             <tx:attributes>
                 <tx:method name="find" read-only="true" propagation="SUPPORTS"/><!-- 存在，执行事务；不存在,按非事务执行 -->
                 <tx:method name="get" read-only="true" propagation="SUPPORTS"/>
                 <tx:method name="in"  propagation="REQUIRED"/><!-- 存在，执行事务；不存在，开启新的事务 -->
                 <tx:method name="up"  propagation="REQUIRED"/>
                 <tx:method name="de"  propagation="REQUIRED"/>
             </tx:attributes>
        </tx:advice>
        
        <!-- 定义切面 -->
        <aop:config>
           
           <!-- 定义切点 -->
           <aop:pointcut expression="'execution(* com.jbit.service.*.*(..))'" id="mycut"/>
        </aop:config>
</beans>